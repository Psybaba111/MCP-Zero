version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: ev_platform_db
    environment:
      POSTGRES_DB: ev_platform
      POSTGRES_USER: ev_user
      POSTGRES_PASSWORD: ev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ev_platform_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: ev_platform_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ev_platform_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ev_platform_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://ev_user:ev_password@postgres:5432/ev_platform
      - REDIS_URL=redis://redis:6379
      - DEBUG=true
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - ev_platform_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # MCP-Zero Service
  mcp_zero:
    image: python:3.11-slim
    container_name: ev_platform_mcp_zero
    ports:
      - "8001:8001"
    volumes:
      - ../MCP-zero:/app
      - ../MCP-tools:/app/MCP-tools
    working_dir: /app
    command: python -m http.server 8001
    networks:
      - ev_platform_network

  # vLLM AI Service
  vllm:
    image: vllm/vllm-openai:latest
    container_name: ev_platform_vllm
    ports:
      - "8002:8000"
    environment:
      - MODEL=Qwen/Qwen2.5-7B-Instruct
    volumes:
      - vllm_data:/root/.cache/huggingface
    networks:
      - ev_platform_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Ollama AI Service
  ollama:
    image: ollama/ollama:latest
    container_name: ev_platform_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - ev_platform_network

  # n8n Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: ev_platform_n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=ev_platform_2024
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=Asia/Kolkata
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - ev_platform_network

  # Rube Workspace (MCP-Zero enabled)
  rube:
    image: python:3.11-slim
    container_name: ev_platform_rube
    ports:
      - "8003:8003"
    volumes:
      - ./automations:/app
    working_dir: /app
    command: python -m http.server 8003
    networks:
      - ev_platform_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ev_platform_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - mcp_zero
      - vllm
      - ollama
      - n8n
      - rube
    networks:
      - ev_platform_network

volumes:
  postgres_data:
  redis_data:
  vllm_data:
  ollama_data:
  n8n_data:

networks:
  ev_platform_network:
    driver: bridge